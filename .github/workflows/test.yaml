name: Test

on:
  pull_request:
    branches: ["*"]
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"

  push:
    branches: ["main", "dev"]
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        go-version: [1.24.3]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod tidy

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.out ./tests/unit/...

      - name: Generate coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests

    strategy:
      fail-fast: true
      matrix:
        go-version: [1.24.3]

    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: go mod tidy

      - name: Pull test images
        run: |
          docker pull alpine:latest
          docker pull nginx:alpine

      - name: Check for integration tests
        id: check_integration
        run: |
          if find . -name "*_test.go" -exec grep -l "//go:build integration" {} \; | grep -q .; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Run integration tests
        if: steps.check_integration.outputs.found == 'true'
        run: go test -v -tags=integration ./tests/integration/...

      - name: Skip integration tests
        if: steps.check_integration.outputs.found == 'false'
        run: echo "No integration tests found, skipping..."

  benchmark:
    runs-on: ubuntu-latest
    needs: unit-tests

    strategy:
      fail-fast: true
      matrix:
        go-version: [1.24.3]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod tidy

      - name: Check for benchmark tests
        id: check_benchmarks
        run: |
          if find . -name "*_test.go" -exec grep -l "func Benchmark" {} \; | grep -q .; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Run benchmarks
        if: steps.check_benchmarks.outputs.found == 'true'
        run: go test -v -bench=. -benchmem ./...

      - name: Skip benchmarks
        if: steps.check_benchmarks.outputs.found == 'false'
        run: echo "No benchmark tests found, skipping..."

  test-summary:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, benchmark]
    if: always()

    steps:
      - name: Test Summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests: ${{ needs.integration-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Benchmarks: ${{ needs.benchmark.result }}" >> $GITHUB_STEP_SUMMARY
